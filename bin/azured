#!/usr/bin/env node

var program = require('commander');
var mkdirp = require('mkdirp');
var fs = require('fs');
var pkg = require('../package.json');
var child_process = require('child_process');
var http = require('http');
var path = require('path');



var version = pkg.version;
var xdebug_urls = {
5.4:{x86:"http://xdebug.org/files/php_xdebug-2.4.0rc1-5.4-vc9-nts.dll",x64:"http://xdebug.org/files/php_xdebug-2.4.0rc1-5.4-vc9-nts-x86_64.dll"},
5.5:{x86:"http://xdebug.org/files/php_xdebug-2.4.0rc1-5.5-vc11-nts.dll",x64:"http://xdebug.org/files/php_xdebug-2.4.0rc1-5.5-vc11-nts-x86_64.dll"},
5.6:{x86:"http://xdebug.org/files/php_xdebug-2.4.0rc1-5.6-vc11-nts.dll",x64:"http://xdebug.org/files/php_xdebug-2.4.0rc1-5.6-vc11-nts-x86_64.dll"},
5.7:{x86:"http://xdebug.org/files/php_xdebug-2.4.0rc1-7.0-vc14-nts.dll",x64:"http://xdebug.org/files/php_xdebug-2.4.0rc1-7.0-vc14-nts-x86_64.dll"}
}

program.version(version)
	.option('-c,--cms <CMS>','CMS Type',/^(wordpress|drupal|magento)$/i,'wordpress')
	.parse(process.argv);

	// console.log(' CMS Type: %j', program.cms);

function main(){
	var php_version = child_process.execSync('php -r "echo phpversion();"',{ encoding: 'utf8' }).substring(0,3);
	var php_arch = child_process.execSync('php -r "echo PHP_INT_SIZE;"',{ encoding: 'utf8' }) == 4 ? "x86" : "x64";
	var destinationPath = program.args.shift() || '.';
	downloadXdebug(php_version,php_arch,destinationPath);
	addUserIni(destinationPath);
}

function downloadXdebug(php_version,php_arch,path){
	mkdir(path, function(){
		mkdir('extensions',function(){
			var file = fs.createWriteStream("extensions/xdebug.dll");
			var request = http.get(xdebug_urls[php_version][php_arch], function(response) {
  				response.pipe(file);
			});
		});
	});
}


function addUserIni(path){
	var useriniContent = loadTemplate('userini/default.txt');
	switch (program.cms) {
        case 'wordpress':
          write(path + '/.user.ini', useriniContent);
          break;
        case 'drupal':
          write(path + '/.user.ini', useriniContent);
          break;
        case 'magento':
          write(path + '/.user.ini', useriniContent);
          break;
        case 'yii':
          write(path + '/.user.ini', useriniContent);
          break;
        default:
          write(path + '/.user.ini', useriniContent);
      }

}

main();

/**
 * echo str > path.
 *
 * @param {String} path
 * @param {String} str
 */

function write(path, str, mode) {
  fs.writeFileSync(path, str, { mode: mode || 0666 });
  console.log('   \x1b[36mcreate\x1b[0m : ' + path);
}

/**
 * Load template file.
 */

function loadTemplate(name) {
  return fs.readFileSync(path.join(__dirname, '..', 'templates', name), 'utf-8');
}

/**
 * Mkdir -p.
 *
 * @param {String} path
 * @param {Function} fn
 */

function mkdir(path, fn) {
  mkdirp(path, 0755, function(err){
    if (err) throw err;
    console.log('   \033[36mcreate\033[0m : ' + path);
    fn && fn();
  });
}